public class Binomial {

    // Function to compute the Binomial Coefficient using Dynamic Programming
    public static int binomialCoefficient(int n, int k) {
        // Create a 2D array to store the binomial coefficients
        int[][] dp = new int[n + 1][k + 1];
        
        // Calculate binomial coefficient for all values of i, j
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j <= Math.min(i, k); j++) {
                // Base Case: C(i, 0) = 1 and C(i, i) = 1
                if (j == 0 || j == i) {
                    dp[i][j] = 1;
                } else {
                    // Use the recurrence relation
                    dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j];
                }
            }
        }

        // Return the value of binomial coefficient C(n, k)
        return dp[n][k];
    }

    public static void main(String[] args) {
        // Test case
        int n = 6, k = 2;

        System.out.println("Binomial Coefficient C(" + n + ", " + k + ") is: " + binomialCoefficient(n, k));
    }
}
